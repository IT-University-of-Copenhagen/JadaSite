/*
 * Copyright 2007-2010 JadaSite.

 * This file is part of JadaSite.
 
 * JadaSite is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * JadaSite is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with JadaSite.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.jada.jpa.entity;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Item generated by hbm2java
 */
@Entity
@Table(name = "item", uniqueConstraints = @UniqueConstraint(columnNames = {
		"item_natural_key", "site_id" }))
public class Item implements java.io.Serializable {

	private static final long serialVersionUID = 3570940793459051972L;
	private Long itemId;
	private String itemNaturalKey;
	private String itemNum;
	private String itemUpcCd;
	private String itemSkuCd;
	private Integer seqNum;
	private String itemTypeCd;
	private char itemSellable;
	private Float itemCost;
	private Integer itemHitCounter;
	private Float itemRating;
	private Integer itemRatingCount;
	private Integer itemQty;
	private Integer itemBookedQty;
	private Date itemPublishOn;
	private Date itemExpireOn;
	private char published;
	private String recUpdateBy;
	private Date recUpdateDatetime;
	private String recCreateBy;
	private Date recCreateDatetime;
	private String siteId;
	private ItemLanguage itemLanguage;
	private ItemPriceCurrency itemPrice;
	private ItemPriceCurrency itemSpecPrice;
	private ShippingType shippingType;
	private ProductClass productClass;
	private User user;
	private CustomAttributeGroup customAttributeGroup;
	private Item itemSkuParent;
	private Set<Menu> menus = new HashSet<Menu>(0);
	private Set<Category> categories = new HashSet<Category>(0);
	private Set<SiteDomain> siteDomains = new HashSet<SiteDomain>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<Item> itemSkus = new HashSet<Item>(0);
	private Set<Item> children = new HashSet<Item>(0);
	private Set<ItemLanguage> itemLanguages = new HashSet<ItemLanguage>(0);
	private Set<ItemPriceCurrency> itemPriceCurrencies = new HashSet<ItemPriceCurrency>(
			0);
	private Set<ItemTierPrice> itemTierPrices = new HashSet<ItemTierPrice>(0);
	private Set<Item> itemsRelated = new HashSet<Item>(0);
	private Set<Item> itemsUpSell = new HashSet<Item>(0);
	private Set<Item> itemsCrossSell = new HashSet<Item>(0);
	private Set<ItemAttributeDetail> itemAttributeDetails = new HashSet<ItemAttributeDetail>(
			0);
	private Set<ItemPriceSearch> itemPriceSearches = new HashSet<ItemPriceSearch>(
			0);
	private Set<ItemDescSearch> itemDescSearches = new HashSet<ItemDescSearch>(
			0);
	private Site site;

	public Item() {
	}

	public Item(String itemNaturalKey, String itemNum, String itemUpcCd,
			String itemSkuCd, Integer seqNum, String itemTypeCd,
			char itemSellable, Integer itemHitCounter, Float itemRating,
			Integer itemRatingCount, Integer itemQty, Integer itemBookedQty,
			Date itemPublishOn, Date itemExpireOn, char published,
			String recUpdateBy, Date recUpdateDatetime, String recCreateBy,
			Date recCreateDatetime, String siteId, ItemLanguage itemLanguage,
			ItemPriceCurrency itemPrice, Site site) {
		this.itemNaturalKey = itemNaturalKey;
		this.itemNum = itemNum;
		this.itemUpcCd = itemUpcCd;
		this.itemSkuCd = itemSkuCd;
		this.seqNum = seqNum;
		this.itemTypeCd = itemTypeCd;
		this.itemSellable = itemSellable;
		this.itemHitCounter = itemHitCounter;
		this.itemRating = itemRating;
		this.itemRatingCount = itemRatingCount;
		this.itemQty = itemQty;
		this.itemBookedQty = itemBookedQty;
		this.itemPublishOn = itemPublishOn;
		this.itemExpireOn = itemExpireOn;
		this.published = published;
		this.recUpdateBy = recUpdateBy;
		this.recUpdateDatetime = recUpdateDatetime;
		this.recCreateBy = recCreateBy;
		this.recCreateDatetime = recCreateDatetime;
		this.siteId = siteId;
		this.itemLanguage = itemLanguage;
		this.itemPrice = itemPrice;
		this.site = site;
	}

	public Item(String itemNaturalKey, String itemNum, String itemUpcCd,
			String itemSkuCd, Integer seqNum, String itemTypeCd,
			char itemSellable, Float itemCost, Integer itemHitCounter,
			Float itemRating, Integer itemRatingCount, Integer itemQty,
			Integer itemBookedQty, Date itemPublishOn, Date itemExpireOn,
			char published, String recUpdateBy, Date recUpdateDatetime,
			String recCreateBy, Date recCreateDatetime, String siteId,
			ItemLanguage itemLanguage, ItemPriceCurrency itemPrice,
			ItemPriceCurrency itemSpecPrice, ShippingType shippingType,
			ProductClass productClass, User user,
			CustomAttributeGroup customAttributeGroup, Item itemSkuParent,
			Set<Menu> menus, Set<Category> categories, Set<Comment> comments,
			Set<Item> itemSkus, Set<Item> children, Set<ItemLanguage> itemLanguages,
			Set<ItemPriceCurrency> itemPriceCurrencies,
			Set<ItemTierPrice> itemTierPrices, Set<Item> itemsRelated,
			Set<Item> itemsUpSell, Set<Item> itemsCrossSell,
			Set<ItemAttributeDetail> itemAttributeDetails,
			Set<ItemPriceSearch> itemPriceSearches,
			Set<ItemDescSearch> itemDescSearches, Site site) {
		this.itemNaturalKey = itemNaturalKey;
		this.itemNum = itemNum;
		this.itemUpcCd = itemUpcCd;
		this.itemSkuCd = itemSkuCd;
		this.seqNum = seqNum;
		this.itemTypeCd = itemTypeCd;
		this.itemSellable = itemSellable;
		this.itemCost = itemCost;
		this.itemHitCounter = itemHitCounter;
		this.itemRating = itemRating;
		this.itemRatingCount = itemRatingCount;
		this.itemQty = itemQty;
		this.itemBookedQty = itemBookedQty;
		this.itemPublishOn = itemPublishOn;
		this.itemExpireOn = itemExpireOn;
		this.published = published;
		this.recUpdateBy = recUpdateBy;
		this.recUpdateDatetime = recUpdateDatetime;
		this.recCreateBy = recCreateBy;
		this.recCreateDatetime = recCreateDatetime;
		this.siteId = siteId;
		this.itemLanguage = itemLanguage;
		this.itemPrice = itemPrice;
		this.itemSpecPrice = itemSpecPrice;
		this.shippingType = shippingType;
		this.productClass = productClass;
		this.user = user;
		this.customAttributeGroup = customAttributeGroup;
		this.itemSkuParent = itemSkuParent;
		this.menus = menus;
		this.categories = categories;
		this.comments = comments;
		this.itemSkus = itemSkus;
		this.children = children;
		this.itemLanguages = itemLanguages;
		this.itemPriceCurrencies = itemPriceCurrencies;
		this.itemTierPrices = itemTierPrices;
		this.itemsRelated = itemsRelated;
		this.itemsUpSell = itemsUpSell;
		this.itemsCrossSell = itemsCrossSell;
		this.itemAttributeDetails = itemAttributeDetails;
		this.itemPriceSearches = itemPriceSearches;
		this.itemDescSearches = itemDescSearches;
		this.site = site;
	}

	@Id
	@GeneratedValue
	@Column(name = "item_id", nullable = false)
	public Long getItemId() {
		return this.itemId;
	}

	public void setItemId(Long itemId) {
		this.itemId = itemId;
	}

	@Column(name = "item_natural_key", nullable = false, length = 255)
	public String getItemNaturalKey() {
		return this.itemNaturalKey;
	}

	public void setItemNaturalKey(String itemNaturalKey) {
		this.itemNaturalKey = itemNaturalKey;
	}

	@Column(name = "item_num", nullable = false, length = 20)
	public String getItemNum() {
		return this.itemNum;
	}

	public void setItemNum(String itemNum) {
		this.itemNum = itemNum;
	}

	@Column(name = "item_upc_cd", nullable = false, length = 20)
	public String getItemUpcCd() {
		return this.itemUpcCd;
	}

	public void setItemUpcCd(String itemUpcCd) {
		this.itemUpcCd = itemUpcCd;
	}

	@Column(name = "item_sku_cd", nullable = false, length = 40)
	public String getItemSkuCd() {
		return this.itemSkuCd;
	}

	public void setItemSkuCd(String itemSkuCd) {
		this.itemSkuCd = itemSkuCd;
	}

	@Column(name = "seq_num", nullable = false)
	public Integer getSeqNum() {
		return this.seqNum;
	}

	public void setSeqNum(Integer seqNum) {
		this.seqNum = seqNum;
	}

	@Column(name = "item_type_cd", nullable = false, length = 2)
	public String getItemTypeCd() {
		return this.itemTypeCd;
	}

	public void setItemTypeCd(String itemTypeCd) {
		this.itemTypeCd = itemTypeCd;
	}

	@Column(name = "item_sellable", nullable = false, length = 1)
	public char getItemSellable() {
		return this.itemSellable;
	}

	public void setItemSellable(char itemSellable) {
		this.itemSellable = itemSellable;
	}

	@Column(name = "item_cost")
	public Float getItemCost() {
		return this.itemCost;
	}

	public void setItemCost(Float itemCost) {
		this.itemCost = itemCost;
	}

	@Column(name = "item_hit_counter", nullable = false)
	public Integer getItemHitCounter() {
		return this.itemHitCounter;
	}

	public void setItemHitCounter(Integer itemHitCounter) {
		this.itemHitCounter = itemHitCounter;
	}

	@Column(name = "item_rating", nullable = false)
	public Float getItemRating() {
		return this.itemRating;
	}

	public void setItemRating(Float itemRating) {
		this.itemRating = itemRating;
	}

	@Column(name = "item_rating_count", nullable = false)
	public Integer getItemRatingCount() {
		return this.itemRatingCount;
	}

	public void setItemRatingCount(Integer itemRatingCount) {
		this.itemRatingCount = itemRatingCount;
	}

	@Column(name = "item_qty", nullable = false)
	public Integer getItemQty() {
		return this.itemQty;
	}

	public void setItemQty(Integer itemQty) {
		this.itemQty = itemQty;
	}

	@Column(name = "item_booked_qty", nullable = false)
	public Integer getItemBookedQty() {
		return this.itemBookedQty;
	}

	public void setItemBookedQty(Integer itemBookedQty) {
		this.itemBookedQty = itemBookedQty;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "item_publish_on", nullable = false, length = 10)
	public Date getItemPublishOn() {
		return this.itemPublishOn;
	}

	public void setItemPublishOn(Date itemPublishOn) {
		this.itemPublishOn = itemPublishOn;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "item_expire_on", nullable = false, length = 10)
	public Date getItemExpireOn() {
		return this.itemExpireOn;
	}

	public void setItemExpireOn(Date itemExpireOn) {
		this.itemExpireOn = itemExpireOn;
	}

	@Column(name = "published", nullable = false, length = 1)
	public char getPublished() {
		return this.published;
	}

	public void setPublished(char published) {
		this.published = published;
	}

	@Column(name = "rec_update_by", nullable = false, length = 20)
	public String getRecUpdateBy() {
		return this.recUpdateBy;
	}

	public void setRecUpdateBy(String recUpdateBy) {
		this.recUpdateBy = recUpdateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rec_update_datetime", nullable = false)
	public Date getRecUpdateDatetime() {
		return this.recUpdateDatetime;
	}

	public void setRecUpdateDatetime(Date recUpdateDatetime) {
		this.recUpdateDatetime = recUpdateDatetime;
	}

	@Column(name = "rec_create_by", nullable = false, length = 20)
	public String getRecCreateBy() {
		return this.recCreateBy;
	}

	public void setRecCreateBy(String recCreateBy) {
		this.recCreateBy = recCreateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rec_create_datetime", nullable = false)
	public Date getRecCreateDatetime() {
		return this.recCreateDatetime;
	}

	public void setRecCreateDatetime(Date recCreateDatetime) {
		this.recCreateDatetime = recCreateDatetime;
	}

	@Column(name = "site_id", nullable = false, insertable = false, updatable = false, length = 20)
	public String getSiteId() {
		return this.siteId;
	}

	public void setSiteId(String siteId) {
		this.siteId = siteId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_lang_id", nullable = false)
	public ItemLanguage getItemLanguage() {
		return this.itemLanguage;
	}

	public void setItemLanguage(ItemLanguage itemLanguage) {
		this.itemLanguage = itemLanguage;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_price_curr_id", nullable = false)
	public ItemPriceCurrency getItemPrice() {
		return this.itemPrice;
	}

	public void setItemPrice(ItemPriceCurrency itemPrice) {
		this.itemPrice = itemPrice;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_spec_price_curr_id")
	public ItemPriceCurrency getItemSpecPrice() {
		return this.itemSpecPrice;
	}

	public void setItemSpecPrice(ItemPriceCurrency itemSpecPrice) {
		this.itemSpecPrice = itemSpecPrice;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "shipping_type_id")
	public ShippingType getShippingType() {
		return this.shippingType;
	}

	public void setShippingType(ShippingType shippingType) {
		this.shippingType = shippingType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_class_id")
	public ProductClass getProductClass() {
		return this.productClass;
	}

	public void setProductClass(ProductClass productClass) {
		this.productClass = productClass;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "custom_attrib_group_id")
	public CustomAttributeGroup getCustomAttributeGroup() {
		return this.customAttributeGroup;
	}

	public void setCustomAttributeGroup(
			CustomAttributeGroup customAttributeGroup) {
		this.customAttributeGroup = customAttributeGroup;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_sku_id")
	public Item getItemSkuParent() {
		return this.itemSkuParent;
	}

	public void setItemSkuParent(Item itemSkuParent) {
		this.itemSkuParent = itemSkuParent;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
	public Set<Menu> getMenus() {
		return this.menus;
	}

	public void setMenus(Set<Menu> menus) {
		this.menus = menus;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "item_category", joinColumns = { @JoinColumn(name = "item_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "cat_id", nullable = false, updatable = false) })
	public Set<Category> getCategories() {
		return this.categories;
	}

	public void setCategories(Set<Category> categories) {
		this.categories = categories;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "item_site_domain", joinColumns = { @JoinColumn(name = "item_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "site_domain_id", nullable = false, updatable = false) })
	public Set<SiteDomain> getSiteDomains() {
		return this.siteDomains;
	}

	public void setSiteDomains(Set<SiteDomain> siteDomains) {
		this.siteDomains = siteDomains;
	}
	
	@ManyToMany(fetch = FetchType.LAZY)
	@OrderBy(value="itemId")
	@JoinTable(name = "item_children", joinColumns = { @JoinColumn(name = "item_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "item_child_id", nullable = false, updatable = false) })
	public Set<Item> getChildren() {
		return this.children;
	}

	public void setChildren(Set<Item> children) {
		this.children = children;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@OrderBy(value="recCreateDatetime desc")
	@JoinColumn(name = "item_id", updatable = false)
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_sku_id", updatable = false)
	public Set<Item> getItemSkus() {
		return this.itemSkus;
	}

	public void setItemSkus(Set<Item> itemSkus) {
		this.itemSkus = itemSkus;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_id")
	public Set<ItemLanguage> getItemLanguages() {
		return this.itemLanguages;
	}

	public void setItemLanguages(Set<ItemLanguage> itemLanguages) {
		this.itemLanguages = itemLanguages;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_id", updatable = false)
	public Set<ItemPriceCurrency> getItemPriceCurrencies() {
		return this.itemPriceCurrencies;
	}

	public void setItemPriceCurrencies(
			Set<ItemPriceCurrency> itemPriceCurrencies) {
		this.itemPriceCurrencies = itemPriceCurrencies;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@OrderBy(value="itemTierQty")
	@JoinColumn(name = "item_id", updatable = false)
	public Set<ItemTierPrice> getItemTierPrices() {
		return this.itemTierPrices;
	}

	public void setItemTierPrices(Set<ItemTierPrice> itemTierPrices) {
		this.itemTierPrices = itemTierPrices;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@OrderBy(value="itemId")
	@JoinTable(name = "item_related", joinColumns = { @JoinColumn(name = "item_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "item_related_id", nullable = false, updatable = false) })
	public Set<Item> getItemsRelated() {
		return this.itemsRelated;
	}

	public void setItemsRelated(Set<Item> itemsRelated) {
		this.itemsRelated = itemsRelated;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@OrderBy(value="itemId")
	@JoinTable(name = "item_upsell", joinColumns = { @JoinColumn(name = "item_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "item_upsell_id", nullable = false, updatable = false) })
	public Set<Item> getItemsUpSell() {
		return this.itemsUpSell;
	}

	public void setItemsUpSell(Set<Item> itemsUpSell) {
		this.itemsUpSell = itemsUpSell;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@OrderBy(value="itemId")
	@JoinTable(name = "item_crosssell", joinColumns = { @JoinColumn(name = "item_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "item_crosssell_id", nullable = false, updatable = false) })
	public Set<Item> getItemsCrossSell() {
		return this.itemsCrossSell;
	}

	public void setItemsCrossSell(Set<Item> itemsCrossSell) {
		this.itemsCrossSell = itemsCrossSell;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "item")
	@OrderBy(value="itemAttribDetailId")
	public Set<ItemAttributeDetail> getItemAttributeDetails() {
		return this.itemAttributeDetails;
	}

	public void setItemAttributeDetails(
			Set<ItemAttributeDetail> itemAttributeDetails) {
		this.itemAttributeDetails = itemAttributeDetails;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_id", updatable = false)
	public Set<ItemPriceSearch> getItemPriceSearches() {
		return this.itemPriceSearches;
	}

	public void setItemPriceSearches(Set<ItemPriceSearch> itemPriceSearches) {
		this.itemPriceSearches = itemPriceSearches;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "item_id", updatable = false)
	public Set<ItemDescSearch> getItemDescSearches() {
		return this.itemDescSearches;
	}

	public void setItemDescSearches(Set<ItemDescSearch> itemDescSearches) {
		this.itemDescSearches = itemDescSearches;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "site_id", nullable = false)
	public Site getSite() {
		return this.site;
	}

	public void setSite(Site site) {
		this.site = site;
	}

}
