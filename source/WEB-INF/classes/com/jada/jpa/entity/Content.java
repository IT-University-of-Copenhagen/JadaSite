/*
 * Copyright 2007-2010 JadaSite.

 * This file is part of JadaSite.
 
 * JadaSite is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * JadaSite is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with JadaSite.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.jada.jpa.entity;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Content generated by hbm2java
 */
@Entity
@Table(name = "content")
public class Content implements java.io.Serializable {
	private static final long serialVersionUID = -581670305255330806L;
	private Long contentId;
	private String contentNaturalKey;
	private Integer contentHitCounter;
	private Float contentRating;
	private Integer contentRatingCount;
	private Date contentPublishOn;
	private Date contentExpireOn;
	private char published;
	private String recUpdateBy;
	private Date recUpdateDatetime;
	private String recCreateBy;
	private Date recCreateDatetime;
	private String siteId;
	private ContentLanguage contentLanguage;
	private User user;
	private Set<Menu> menus = new HashSet<Menu>(0);
	private Set<Category> categories = new HashSet<Category>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<ContentLanguage> contentLanguages = new HashSet<ContentLanguage>(
			0);
	private Set<Content> contentsRelated = new HashSet<Content>(0);
	private Set<ContentDescSearch> contentDescSearches = new HashSet<ContentDescSearch>(
			0);
	private Site site;

	public Content() {
	}

	public Content(String contentNaturalKey, Integer contentHitCounter,
			Float contentRating, Integer contentRatingCount,
			Date contentPublishOn, Date contentExpireOn, char published,
			String recUpdateBy, Date recUpdateDatetime, String recCreateBy,
			Date recCreateDatetime, String siteId,
			ContentLanguage contentLanguage, Site site) {
		this.contentNaturalKey = contentNaturalKey;
		this.contentHitCounter = contentHitCounter;
		this.contentRating = contentRating;
		this.contentRatingCount = contentRatingCount;
		this.contentPublishOn = contentPublishOn;
		this.contentExpireOn = contentExpireOn;
		this.published = published;
		this.recUpdateBy = recUpdateBy;
		this.recUpdateDatetime = recUpdateDatetime;
		this.recCreateBy = recCreateBy;
		this.recCreateDatetime = recCreateDatetime;
		this.siteId = siteId;
		this.contentLanguage = contentLanguage;
		this.site = site;
	}

	public Content(String contentNaturalKey, Integer contentHitCounter,
			Float contentRating, Integer contentRatingCount,
			Date contentPublishOn, Date contentExpireOn, char published,
			String recUpdateBy, Date recUpdateDatetime, String recCreateBy,
			Date recCreateDatetime, String siteId,
			ContentLanguage contentLanguage, User user, Set<Menu> menus,
			Set<Category> categories, Set<Comment> comments,
			Set<ContentLanguage> contentLanguages,
			Set<Content> contentsRelated,
			Set<ContentDescSearch> contentDescSearches, Site site) {
		this.contentNaturalKey = contentNaturalKey;
		this.contentHitCounter = contentHitCounter;
		this.contentRating = contentRating;
		this.contentRatingCount = contentRatingCount;
		this.contentPublishOn = contentPublishOn;
		this.contentExpireOn = contentExpireOn;
		this.published = published;
		this.recUpdateBy = recUpdateBy;
		this.recUpdateDatetime = recUpdateDatetime;
		this.recCreateBy = recCreateBy;
		this.recCreateDatetime = recCreateDatetime;
		this.siteId = siteId;
		this.contentLanguage = contentLanguage;
		this.user = user;
		this.menus = menus;
		this.categories = categories;
		this.comments = comments;
		this.contentLanguages = contentLanguages;
		this.contentsRelated = contentsRelated;
		this.contentDescSearches = contentDescSearches;
		this.site = site;
	}

	@Id
	@GeneratedValue
	@Column(name = "content_id", nullable = false)
	public Long getContentId() {
		return this.contentId;
	}

	public void setContentId(Long contentId) {
		this.contentId = contentId;
	}

	@Column(name = "content_natural_key", nullable = false, length = 255)
	public String getContentNaturalKey() {
		return this.contentNaturalKey;
	}

	public void setContentNaturalKey(String contentNaturalKey) {
		this.contentNaturalKey = contentNaturalKey;
	}

	@Column(name = "content_hit_counter", nullable = false)
	public Integer getContentHitCounter() {
		return this.contentHitCounter;
	}

	public void setContentHitCounter(Integer contentHitCounter) {
		this.contentHitCounter = contentHitCounter;
	}

	@Column(name = "content_rating", nullable = false)
	public Float getContentRating() {
		return this.contentRating;
	}

	public void setContentRating(Float contentRating) {
		this.contentRating = contentRating;
	}

	@Column(name = "content_rating_count", nullable = false)
	public Integer getContentRatingCount() {
		return this.contentRatingCount;
	}

	public void setContentRatingCount(Integer contentRatingCount) {
		this.contentRatingCount = contentRatingCount;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "content_publish_on", nullable = false, length = 10)
	public Date getContentPublishOn() {
		return this.contentPublishOn;
	}

	public void setContentPublishOn(Date contentPublishOn) {
		this.contentPublishOn = contentPublishOn;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "content_expire_on", nullable = false, length = 10)
	public Date getContentExpireOn() {
		return this.contentExpireOn;
	}

	public void setContentExpireOn(Date contentExpireOn) {
		this.contentExpireOn = contentExpireOn;
	}

	@Column(name = "published", nullable = false, length = 1)
	public char getPublished() {
		return this.published;
	}

	public void setPublished(char published) {
		this.published = published;
	}

	@Column(name = "rec_update_by", nullable = false, length = 20)
	public String getRecUpdateBy() {
		return this.recUpdateBy;
	}

	public void setRecUpdateBy(String recUpdateBy) {
		this.recUpdateBy = recUpdateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rec_update_datetime", nullable = false)
	public Date getRecUpdateDatetime() {
		return this.recUpdateDatetime;
	}

	public void setRecUpdateDatetime(Date recUpdateDatetime) {
		this.recUpdateDatetime = recUpdateDatetime;
	}

	@Column(name = "rec_create_by", nullable = false, length = 20)
	public String getRecCreateBy() {
		return this.recCreateBy;
	}

	public void setRecCreateBy(String recCreateBy) {
		this.recCreateBy = recCreateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rec_create_datetime", nullable = false)
	public Date getRecCreateDatetime() {
		return this.recCreateDatetime;
	}

	public void setRecCreateDatetime(Date recCreateDatetime) {
		this.recCreateDatetime = recCreateDatetime;
	}

	@Column(name = "site_id", nullable = false, insertable = false, updatable = false, length = 20)
	public String getSiteId() {
		return this.siteId;
	}

	public void setSiteId(String siteId) {
		this.siteId = siteId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "content_lang_id", nullable = false)
	public ContentLanguage getContentLanguage() {
		return this.contentLanguage;
	}

	public void setContentLanguage(ContentLanguage contentLanguage) {
		this.contentLanguage = contentLanguage;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "content")
	public Set<Menu> getMenus() {
		return this.menus;
	}

	public void setMenus(Set<Menu> menus) {
		this.menus = menus;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "content_category", joinColumns = { @JoinColumn(name = "content_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "cat_id", nullable = false, updatable = false) })
	public Set<Category> getCategories() {
		return this.categories;
	}

	public void setCategories(Set<Category> categories) {
		this.categories = categories;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@OrderBy(value="recCreateDatetime desc")
	@JoinColumn(name = "content_id", updatable = false)
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "content_id")
	public Set<ContentLanguage> getContentLanguages() {
		return this.contentLanguages;
	}

	public void setContentLanguages(Set<ContentLanguage> contentLanguages) {
		this.contentLanguages = contentLanguages;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@OrderBy(value="contentNaturalKey")
	@JoinTable(name = "content_related", joinColumns = { @JoinColumn(name = "content_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "item_related_id", nullable = false, updatable = false) })
	public Set<Content> getContentsRelated() {
		return this.contentsRelated;
	}

	public void setContentsRelated(Set<Content> contentsRelated) {
		this.contentsRelated = contentsRelated;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "content_id", updatable = false)
	public Set<ContentDescSearch> getContentDescSearches() {
		return this.contentDescSearches;
	}

	public void setContentDescSearches(
			Set<ContentDescSearch> contentDescSearches) {
		this.contentDescSearches = contentDescSearches;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "site_id", nullable = false)
	public Site getSite() {
		return this.site;
	}

	public void setSite(Site site) {
		this.site = site;
	}

}
