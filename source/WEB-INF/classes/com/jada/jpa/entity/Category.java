/*
 * Copyright 2007-2010 JadaSite.

 * This file is part of JadaSite.
 
 * JadaSite is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * JadaSite is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with JadaSite.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.jada.jpa.entity;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category", uniqueConstraints = @UniqueConstraint(columnNames = {
		"cat_natural_key", "site_id" }))
public class Category implements java.io.Serializable {
	private static final long serialVersionUID = -6867150468374998755L;
	private Long catId;
	private String catNaturalKey;
	private int seqNum;
	private char published;
	private String recUpdateBy;
	private Date recUpdateDatetime;
	private String recCreateBy;
	private Date recCreateDatetime;
	private String siteId;
	private CategoryLanguage categoryLanguage;
	private Category categoryParent;
	private Set<Category> categoryChildren = new HashSet<Category>(0);
	private Set<Item> items = new HashSet<Item>(0);
	private Set<Content> contents = new HashSet<Content>(0);
	private Set<Menu> menus = new HashSet<Menu>(0);
	private Set<CategoryLanguage> categoryLanguages = new HashSet<CategoryLanguage>(
			0);
	private Set<CustomAttribute> customAttributes = new HashSet<CustomAttribute>(
			0);
	private Set<SiteDomain> siteDomains = new HashSet<SiteDomain>(0);
	private Site site;

	public Category() {
	}

	public Category(String catNaturalKey, int seqNum, char published,
			String recUpdateBy, Date recUpdateDatetime, String recCreateBy,
			Date recCreateDatetime, String siteId, Site site) {
		this.catNaturalKey = catNaturalKey;
		this.seqNum = seqNum;
		this.published = published;
		this.recUpdateBy = recUpdateBy;
		this.recUpdateDatetime = recUpdateDatetime;
		this.recCreateBy = recCreateBy;
		this.recCreateDatetime = recCreateDatetime;
		this.siteId = siteId;
		this.site = site;
	}

	public Category(String catNaturalKey, int seqNum, char published,
			String recUpdateBy, Date recUpdateDatetime, String recCreateBy,
			Date recCreateDatetime, String siteId,
			CategoryLanguage categoryLanguage, Category categoryParent,
			Set<Category> categoryChildren, Set<Item> items,
			Set<Content> contents, Set<Menu> menus,
			Set<CategoryLanguage> categoryLanguages,
			Set<CustomAttribute> customAttributes, Set<SiteDomain> siteDomains,
			Site site) {
		this.catNaturalKey = catNaturalKey;
		this.seqNum = seqNum;
		this.published = published;
		this.recUpdateBy = recUpdateBy;
		this.recUpdateDatetime = recUpdateDatetime;
		this.recCreateBy = recCreateBy;
		this.recCreateDatetime = recCreateDatetime;
		this.siteId = siteId;
		this.categoryLanguage = categoryLanguage;
		this.categoryParent = categoryParent;
		this.categoryChildren = categoryChildren;
		this.items = items;
		this.contents = contents;
		this.menus = menus;
		this.categoryLanguages = categoryLanguages;
		this.customAttributes = customAttributes;
		this.siteDomains = siteDomains;
		this.site = site;
	}

	@Id
	@GeneratedValue
	@Column(name = "cat_id", nullable = false)
	public Long getCatId() {
		return this.catId;
	}

	public void setCatId(Long catId) {
		this.catId = catId;
	}

	@Column(name = "cat_natural_key", nullable = false)
	public String getCatNaturalKey() {
		return this.catNaturalKey;
	}

	public void setCatNaturalKey(String catNaturalKey) {
		this.catNaturalKey = catNaturalKey;
	}

	@Column(name = "seq_num", nullable = false)
	public int getSeqNum() {
		return this.seqNum;
	}

	public void setSeqNum(int seqNum) {
		this.seqNum = seqNum;
	}

	@Column(name = "published", nullable = false, length = 1)
	public char getPublished() {
		return this.published;
	}

	public void setPublished(char published) {
		this.published = published;
	}

	@Column(name = "rec_update_by", nullable = false, length = 20)
	public String getRecUpdateBy() {
		return this.recUpdateBy;
	}

	public void setRecUpdateBy(String recUpdateBy) {
		this.recUpdateBy = recUpdateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rec_update_datetime", nullable = false)
	public Date getRecUpdateDatetime() {
		return this.recUpdateDatetime;
	}

	public void setRecUpdateDatetime(Date recUpdateDatetime) {
		this.recUpdateDatetime = recUpdateDatetime;
	}

	@Column(name = "rec_create_by", nullable = false, length = 20)
	public String getRecCreateBy() {
		return this.recCreateBy;
	}

	public void setRecCreateBy(String recCreateBy) {
		this.recCreateBy = recCreateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rec_create_datetime", nullable = false)
	public Date getRecCreateDatetime() {
		return this.recCreateDatetime;
	}

	public void setRecCreateDatetime(Date recCreateDatetime) {
		this.recCreateDatetime = recCreateDatetime;
	}

	@Column(name = "site_id", nullable = false, insertable = false, updatable = false, length = 20)
	public String getSiteId() {
		return this.siteId;
	}

	public void setSiteId(String siteId) {
		this.siteId = siteId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cat_lang_id")
	public CategoryLanguage getCategoryLanguage() {
		return this.categoryLanguage;
	}

	public void setCategoryLanguage(CategoryLanguage categoryLanguage) {
		this.categoryLanguage = categoryLanguage;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cat_parent_id")
	public Category getCategoryParent() {
		return this.categoryParent;
	}

	public void setCategoryParent(Category categoryParent) {
		this.categoryParent = categoryParent;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@OrderBy(value="seqNum")
	@JoinColumn(name = "cat_parent_id", updatable = false)
	public Set<Category> getCategoryChildren() {
		return this.categoryChildren;
	}

	public void setCategoryChildren(Set<Category> categoryChildren) {
		this.categoryChildren = categoryChildren;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "categories")
	public Set<Item> getItems() {
		return this.items;
	}

	public void setItems(Set<Item> items) {
		this.items = items;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "categories")
	public Set<Content> getContents() {
		return this.contents;
	}

	public void setContents(Set<Content> contents) {
		this.contents = contents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<Menu> getMenus() {
		return this.menus;
	}

	public void setMenus(Set<Menu> menus) {
		this.menus = menus;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "cat_id", updatable = false)
	public Set<CategoryLanguage> getCategoryLanguages() {
		return this.categoryLanguages;
	}

	public void setCategoryLanguages(Set<CategoryLanguage> categoryLanguages) {
		this.categoryLanguages = categoryLanguages;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@OrderBy(value="customAttribId")
	@JoinTable(name = "category_custom_attribute", joinColumns = { @JoinColumn(name = "cat_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "custom_attrib_id", nullable = false, updatable = false) })
	public Set<CustomAttribute> getCustomAttributes() {
		return this.customAttributes;
	}

	public void setCustomAttributes(Set<CustomAttribute> customAttributes) {
		this.customAttributes = customAttributes;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "category_site_domain", joinColumns = { @JoinColumn(name = "cat_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "site_domain_id", nullable = false, updatable = false) })
	public Set<SiteDomain> getSiteDomains() {
		return this.siteDomains;
	}

	public void setSiteDomains(Set<SiteDomain> siteDomains) {
		this.siteDomains = siteDomains;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "site_id", nullable = false)
	public Site getSite() {
		return this.site;
	}

	public void setSite(Site site) {
		this.site = site;
	}

}
