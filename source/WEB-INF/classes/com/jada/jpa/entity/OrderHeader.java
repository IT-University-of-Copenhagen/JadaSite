/*
 * Copyright 2007-2010 JadaSite.

 * This file is part of JadaSite.
 
 * JadaSite is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * JadaSite is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with JadaSite.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.jada.jpa.entity;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OrderHeader generated by hbm2java
 */
@Entity
@Table(name = "order_header")
public class OrderHeader implements java.io.Serializable {

	private static final long serialVersionUID = -3977646793900314159L;
	private Long orderHeaderId;
	private String orderNum;
	private String custEmail;
	private Float shippingTotal;
	private Float shippingDiscountTotal;
	private Float orderTotal;
	private String paymentGatewayProvider;
	private String creditCardDesc;
	private String custCreditCardNum;
	private String shippingMethodName;
	private String orderAbundantLoc;
	private Date shippingValidUntil;
	private char shippingPickUp;
	private String orderStatus;
	private Date orderDate;
	private String recUpdateBy;
	private Date recUpdateDatetime;
	private String recCreateBy;
	private Date recCreateDatetime;
	private Set<OrderDetailTax> orderTaxes = new HashSet<OrderDetailTax>(0);
	private Set<OrderItemDetail> orderItemDetails = new HashSet<OrderItemDetail>(
			0);
	private Set<OrderOtherDetail> orderOtherDetails = new HashSet<OrderOtherDetail>(
			0);
	private Set<InvoiceHeader> invoiceHeaders = new HashSet<InvoiceHeader>(0);
	private Set<CreditHeader> creditHeaders = new HashSet<CreditHeader>(0);
	private Set<ShipHeader> shipHeaders = new HashSet<ShipHeader>(0);
	private Set<OrderTracking> orderTrackings = new HashSet<OrderTracking>(0);
	private PaymentTran paymentTran;
	private PaymentTran voidPaymentTran;
	private OrderAddress custAddress;
	private OrderAddress shippingAddress;
	private OrderAddress billingAddress;
	private ShippingMethod shppingMethod;
	private Customer customer;
	private SiteProfile siteProfile;
	private SiteCurrency siteCurrency;
	private SiteDomain siteDomain;

	public OrderHeader() {
	}

	public OrderHeader(String orderNum, String custEmail, Float shippingTotal,
			Float shippingDiscountTotal, Float orderTotal,
			String shippingMethodName, String orderStatus, 
			String orderAbundantLoc, Date shippingValidUntil,
			Date orderDate,
			String recUpdateBy, Date recUpdateDatetime, String recCreateBy,
			Date recCreateDatetime, SiteDomain siteDomain) {
		this.orderNum = orderNum;
		this.custEmail = custEmail;
		this.shippingTotal = shippingTotal;
		this.shippingDiscountTotal = shippingDiscountTotal;
		this.orderTotal = orderTotal;
		this.shippingMethodName = shippingMethodName;
		this.orderAbundantLoc = orderAbundantLoc;
		this.shippingValidUntil = shippingValidUntil;
		this.orderStatus = orderStatus;
		this.orderDate = orderDate;
		this.recUpdateBy = recUpdateBy;
		this.recUpdateDatetime = recUpdateDatetime;
		this.recCreateBy = recCreateBy;
		this.recCreateDatetime = recCreateDatetime;
		this.siteDomain = siteDomain;
	}

	public OrderHeader(String orderNum, String custEmail, Float shippingTotal,
			Float shippingDiscountTotal, Float orderTotal,
			String paymentGatewayProvider, String creditCardDesc,
			String custCreditCardNum, String shippingMethodName,
			String orderAbundantLoc, Date shippingValidUntil,
			String orderStatus, Date orderDate, String recUpdateBy,
			Date recUpdateDatetime, String recCreateBy, Date recCreateDatetime,
			Set<OrderDetailTax> orderTaxes,
			Set<OrderItemDetail> orderItemDetails,
			Set<OrderOtherDetail> orderOtherDetails,
			Set<InvoiceHeader> invoiceHeaders, Set<CreditHeader> creditHeaders,
			Set<ShipHeader> shipHeaders, Set<OrderTracking> orderTrackings,
			PaymentTran paymentTran, PaymentTran voidPaymentTran,
			OrderAddress custAddress, OrderAddress shippingAddress,
			OrderAddress billingAddress, ShippingMethod shppingMethod,
			Customer customer, SiteProfile siteProfile,
			SiteCurrency siteCurrency, SiteDomain siteDomain) {
		this.orderNum = orderNum;
		this.custEmail = custEmail;
		this.shippingTotal = shippingTotal;
		this.shippingDiscountTotal = shippingDiscountTotal;
		this.orderTotal = orderTotal;
		this.paymentGatewayProvider = paymentGatewayProvider;
		this.creditCardDesc = creditCardDesc;
		this.custCreditCardNum = custCreditCardNum;
		this.shippingMethodName = shippingMethodName;
		this.orderAbundantLoc = orderAbundantLoc;
		this.shippingValidUntil = shippingValidUntil;
		this.orderStatus = orderStatus;
		this.orderDate = orderDate;
		this.recUpdateBy = recUpdateBy;
		this.recUpdateDatetime = recUpdateDatetime;
		this.recCreateBy = recCreateBy;
		this.recCreateDatetime = recCreateDatetime;
		this.orderTaxes = orderTaxes;
		this.orderItemDetails = orderItemDetails;
		this.orderOtherDetails = orderOtherDetails;
		this.invoiceHeaders = invoiceHeaders;
		this.creditHeaders = creditHeaders;
		this.shipHeaders = shipHeaders;
		this.orderTrackings = orderTrackings;
		this.paymentTran = paymentTran;
		this.voidPaymentTran = voidPaymentTran;
		this.custAddress = custAddress;
		this.shippingAddress = shippingAddress;
		this.billingAddress = billingAddress;
		this.shppingMethod = shppingMethod;
		this.customer = customer;
		this.siteProfile = siteProfile;
		this.siteCurrency = siteCurrency;
		this.siteDomain = siteDomain;
	}

	@Id
	@GeneratedValue
	@Column(name = "order_header_id", nullable = false)
	public Long getOrderHeaderId() {
		return this.orderHeaderId;
	}

	public void setOrderHeaderId(Long orderHeaderId) {
		this.orderHeaderId = orderHeaderId;
	}

	@Column(name = "order_num", nullable = false, length = 20)
	public String getOrderNum() {
		return this.orderNum;
	}

	public void setOrderNum(String orderNum) {
		this.orderNum = orderNum;
	}

	@Column(name = "cust_email", nullable = false, length = 255)
	public String getCustEmail() {
		return this.custEmail;
	}

	public void setCustEmail(String custEmail) {
		this.custEmail = custEmail;
	}

	@Column(name = "shipping_total", nullable = false)
	public Float getShippingTotal() {
		return this.shippingTotal;
	}

	public void setShippingTotal(Float shippingTotal) {
		this.shippingTotal = shippingTotal;
	}

	@Column(name = "shipping_discount_total", nullable = false)
	public Float getShippingDiscountTotal() {
		return this.shippingDiscountTotal;
	}

	public void setShippingDiscountTotal(Float shippingDiscountTotal) {
		this.shippingDiscountTotal = shippingDiscountTotal;
	}

	@Column(name = "order_total", nullable = false)
	public Float getOrderTotal() {
		return this.orderTotal;
	}

	public void setOrderTotal(Float orderTotal) {
		this.orderTotal = orderTotal;
	}

	@Column(name = "payment_gateway_provider", length = 40)
	public String getPaymentGatewayProvider() {
		return this.paymentGatewayProvider;
	}

	public void setPaymentGatewayProvider(String paymentGatewayProvider) {
		this.paymentGatewayProvider = paymentGatewayProvider;
	}

	@Column(name = "creditcard_desc", length = 40)
	public String getCreditCardDesc() {
		return this.creditCardDesc;
	}

	public void setCreditCardDesc(String creditCardDesc) {
		this.creditCardDesc = creditCardDesc;
	}

	@Column(name = "cust_creditcard_num", length = 192)
	public String getCustCreditCardNum() {
		return this.custCreditCardNum;
	}

	public void setCustCreditCardNum(String custCreditCardNum) {
		this.custCreditCardNum = custCreditCardNum;
	}

	@Column(name = "shipping_method_name", nullable = true, length = 40)
	public String getShippingMethodName() {
		return this.shippingMethodName;
	}

	public void setShippingMethodName(String shippingMethodName) {
		this.shippingMethodName = shippingMethodName;
	}

	@Column(name = "order_abundant_loc", nullable = true, length = 10)
	public String getOrderAbundantLoc() {
		return this.orderAbundantLoc;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "shipping_valid_until", nullable = true)
	public Date getShippingValidUntil() {
		return this.shippingValidUntil;
	}

	public void setShippingValidUntil(Date shippingValidUntil) {
		this.shippingValidUntil = shippingValidUntil;
	}

	public void setOrderAbundantLoc(String orderAbundantLoc) {
		this.orderAbundantLoc = orderAbundantLoc;
	}

	@Column(name = "shipping_pick_up", nullable = false, length = 1)
	public char getShippingPickUp() {
		return this.shippingPickUp;
	}

	public void setShippingPickUp(char shippingPickUp) {
		this.shippingPickUp = shippingPickUp;
	}

	@Column(name = "order_status", nullable = false, length = 1)
	public String getOrderStatus() {
		return this.orderStatus;
	}

	public void setOrderStatus(String orderStatus) {
		this.orderStatus = orderStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "order_date", nullable = false)
	public Date getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	@Column(name = "rec_update_by", nullable = false, length = 20)
	public String getRecUpdateBy() {
		return this.recUpdateBy;
	}

	public void setRecUpdateBy(String recUpdateBy) {
		this.recUpdateBy = recUpdateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rec_update_datetime", nullable = false)
	public Date getRecUpdateDatetime() {
		return this.recUpdateDatetime;
	}

	public void setRecUpdateDatetime(Date recUpdateDatetime) {
		this.recUpdateDatetime = recUpdateDatetime;
	}

	@Column(name = "rec_create_by", nullable = false, length = 20)
	public String getRecCreateBy() {
		return this.recCreateBy;
	}

	public void setRecCreateBy(String recCreateBy) {
		this.recCreateBy = recCreateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "rec_create_datetime", nullable = false)
	public Date getRecCreateDatetime() {
		return this.recCreateDatetime;
	}

	public void setRecCreateDatetime(Date recCreateDatetime) {
		this.recCreateDatetime = recCreateDatetime;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_header_id", updatable = false)
	@OrderBy(value="taxName")
	public Set<OrderDetailTax> getOrderTaxes() {
		return this.orderTaxes;
	}

	public void setOrderTaxes(Set<OrderDetailTax> orderTaxes) {
		this.orderTaxes = orderTaxes;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@OrderBy(value="orderItemDetailId")
	@JoinColumn(name = "order_header_id", updatable = false)
	public Set<OrderItemDetail> getOrderItemDetails() {
		return this.orderItemDetails;
	}

	public void setOrderItemDetails(Set<OrderItemDetail> orderItemDetails) {
		this.orderItemDetails = orderItemDetails;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_header_id", updatable = false)
	public Set<OrderOtherDetail> getOrderOtherDetails() {
		return this.orderOtherDetails;
	}

	public void setOrderOtherDetails(Set<OrderOtherDetail> orderOtherDetails) {
		this.orderOtherDetails = orderOtherDetails;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@OrderBy(value="invoiceHeaderId")
	@JoinColumn(name = "order_header_id", updatable = false)
	public Set<InvoiceHeader> getInvoiceHeaders() {
		return this.invoiceHeaders;
	}

	public void setInvoiceHeaders(Set<InvoiceHeader> invoiceHeaders) {
		this.invoiceHeaders = invoiceHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@OrderBy(value="creditHeaderId")
	@JoinColumn(name = "order_header_id", updatable = false)
	public Set<CreditHeader> getCreditHeaders() {
		return this.creditHeaders;
	}

	public void setCreditHeaders(Set<CreditHeader> creditHeaders) {
		this.creditHeaders = creditHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@OrderBy(value="shipHeaderId")
	@JoinColumn(name = "order_header_id", updatable = false)
	public Set<ShipHeader> getShipHeaders() {
		return this.shipHeaders;
	}

	public void setShipHeaders(Set<ShipHeader> shipHeaders) {
		this.shipHeaders = shipHeaders;
	}

	@OneToMany(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_header_id", updatable = false)
	public Set<OrderTracking> getOrderTrackings() {
		return this.orderTrackings;
	}

	public void setOrderTrackings(Set<OrderTracking> orderTrackings) {
		this.orderTrackings = orderTrackings;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payment_tran_id")
	public PaymentTran getPaymentTran() {
		return this.paymentTran;
	}

	public void setPaymentTran(PaymentTran paymentTran) {
		this.paymentTran = paymentTran;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "void_payment_tran_id")
	public PaymentTran getVoidPaymentTran() {
		return this.voidPaymentTran;
	}

	public void setVoidPaymentTran(PaymentTran voidPaymentTran) {
		this.voidPaymentTran = voidPaymentTran;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cust_address_id")
	public OrderAddress getCustAddress() {
		return this.custAddress;
	}

	public void setCustAddress(OrderAddress custAddress) {
		this.custAddress = custAddress;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "shipping_address_id")
	public OrderAddress getShippingAddress() {
		return this.shippingAddress;
	}

	public void setShippingAddress(OrderAddress shippingAddress) {
		this.shippingAddress = shippingAddress;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "billing_address_id")
	public OrderAddress getBillingAddress() {
		return this.billingAddress;
	}

	public void setBillingAddress(OrderAddress billingAddress) {
		this.billingAddress = billingAddress;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "shipping_method_id")
	public ShippingMethod getShppingMethod() {
		return this.shppingMethod;
	}

	public void setShppingMethod(ShippingMethod shppingMethod) {
		this.shppingMethod = shppingMethod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cust_id")
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "site_profile_id")
	public SiteProfile getSiteProfile() {
		return this.siteProfile;
	}

	public void setSiteProfile(SiteProfile siteProfile) {
		this.siteProfile = siteProfile;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "site_currency_id")
	public SiteCurrency getSiteCurrency() {
		return this.siteCurrency;
	}

	public void setSiteCurrency(SiteCurrency siteCurrency) {
		this.siteCurrency = siteCurrency;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "site_domain_id", nullable = false)
	public SiteDomain getSiteDomain() {
		return this.siteDomain;
	}

	public void setSiteDomain(SiteDomain siteDomain) {
		this.siteDomain = siteDomain;
	}

}
